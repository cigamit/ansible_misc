---
- name: Check previous job for change entries
  hosts: localhost
  vars: 
    tower_server: 10.1.10.44
  tasks:

    # Lets first check if we have the proper variable to ensure we are not running from command line or outside a workflow
    - name: Precheck
      ansible.builtin.assert:
        that:
          - tower_workflow_job_id is defined
          - tower_workflow_job_id > 0
      fail_msg: "This playbook must be ran from a workflow within Controller"


    # We have the ID of the currently running workflow job via the variable 'tower_workflow_job_id'
    # So we will use that to get the Template jobs that are associated with it
    - name: Get the Job ID for the first playbook run
      ansible.builtin.uri:
        url: https://{{ tower_server }}/api/v2/workflow_jobs/{{ tower_workflow_job_id }}/workflow_nodes/
        method: GET
        user: "{{ tower_username }}"
        password: "{{ tower_password }}"
        body_format: json
        validate_certs: False
        force_basic_auth: yes
        status_code:
          - 200
      register: response

    # Now that we have the Job ID of the first job of the workflow, we need to grab the job events of that job
    - name: Get the Job Results for the first playbook run
      ansible.builtin.uri:
        url: https://{{ tower_server }}/api/v2/jobs/{{ response.json.results[0].summary_fields.job.id }}/job_events/
        method: GET
        user: "{{ tower_username }}"
        password: "{{ tower_password }}"
        body_format: json
        validate_certs: False
        force_basic_auth: yes
        status_code:
          - 200
      register: jdata

    # Now that we have the Job Events, we will do a quick peek through them to see if we made any changes
    # There is no reason to try and build a report if no changes where made
    - ansible.builtin.set_fact:
        job_changed: "{%- set changed = namespace(v=false) -%}\
                      {%- for c in jdata.json.results -%}\
                        {%- if c.event == 'runner_on_ok' and c.changed -%}\
                          {%- set changed.v = true -%}\
                        {%- endif -%}\
                      {%- endfor -%}\
                      {{- changed.v -}}"

    # Display a quick message if we didn't detect any changes.  That way they aren't wondering if the job
    # didn't complete, etc.. 
    - ansible.builtin.debug: 
        msg: No Changes were detected
      when: not job_changed

    # From here, we only continue if a change was actually made on the previous playbook
    - when: job_changed
      block:

      # While I am creating a CSV file, it seems like it would be better to create an HTML file as
      # we can get more creative with the DIFF display
      - name: Create report of changes
        ansible.builtin.template:
          src: templates/changes.csv.j2
          dest: changes.csv 

      - name: Display the Results
        ansible.builtin.debug:
          msg: "{{ lookup('file', 'changes.csv') }}"

      # From here you can add more data to the template and email it out etc...